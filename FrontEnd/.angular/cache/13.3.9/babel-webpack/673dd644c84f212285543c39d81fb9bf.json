{"ast":null,"code":"import { ElementRef } from \"@angular/core\";\nimport { DataService } from \"./services/data.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { DataSource } from \"@angular/cdk/collections\";\nimport { AddDialogComponent } from \"./dialogs/add/add.dialog.component\";\nimport { EditDialogComponent } from \"./dialogs/edit/edit.dialog.component\";\nimport { DeleteDialogComponent } from \"./dialogs/delete/delete.dialog.component\";\nimport { BehaviorSubject, fromEvent, merge } from \"rxjs\";\nimport { Branch } from \"./models/branch\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"./services/data.service\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/table\";\nimport * as i8 from \"@angular/material/sort\";\nimport * as i9 from \"@angular/material/paginator\";\nimport * as i10 from \"@angular/common\";\nconst _c0 = [\"filter\"];\n\nfunction AppComponent_mat_header_cell_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Branch Id\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r20.branchId);\n  }\n}\n\nfunction AppComponent_mat_header_cell_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Code\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r21.code, \"\");\n  }\n}\n\nfunction AppComponent_mat_header_cell_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Description\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r22.description, \"\");\n  }\n}\n\nfunction AppComponent_mat_header_cell_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Address\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r23.address, \"\");\n  }\n}\n\nfunction AppComponent_mat_header_cell_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Identification\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r24.identification, \"\");\n  }\n}\n\nfunction AppComponent_mat_header_cell_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Create Date\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r25 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 1, row_r25.createDate, \"dd/MM/yyyy\"), \"\");\n  }\n}\n\nfunction AppComponent_mat_header_cell_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵtext(1, \"Currency\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r26 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r26.currencyId, \"\");\n  }\n}\n\nfunction AppComponent_mat_header_cell_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-header-cell\");\n    i0.ɵɵelementStart(1, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function AppComponent_mat_header_cell_33_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.addNew();\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\", 21);\n    i0.ɵɵtext(3, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_cell_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-cell\");\n    i0.ɵɵelementStart(1, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AppComponent_mat_cell_34_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const row_r29 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.startEdit(row_r29.branchId, row_r29.code, row_r29.description, row_r29.address, row_r29.identification, row_r29.createDate, row_r29.currencyId);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\", 23);\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function AppComponent_mat_cell_34_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const row_r29 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.deleteItem(row_r29.branchId, row_r29.code, row_r29.description, row_r29.address, row_r29.identification, row_r29.createDate, row_r29.currencyId);\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\", 24);\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_mat_header_row_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-header-row\");\n  }\n}\n\nfunction AppComponent_mat_row_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-row\");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(httpClient, dialog, dataService) {\n      this.httpClient = httpClient;\n      this.dialog = dialog;\n      this.dataService = dataService;\n      this.displayedColumns = [\"Code\", \"Address\", \"Identification\", \"CreationDate\", \"Currency\", \"Actions\"];\n    }\n\n    ngOnInit() {\n      this.loadData();\n    }\n\n    refresh() {\n      this.loadData();\n    }\n\n    addNew() {\n      const dialogRef = this.dialog.open(AddDialogComponent, {\n        data: {\n          branch: Branch\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 1) {\n          // After dialog is closed we're doing frontend updates\n          // For add we're just pushing a new row inside DataService\n          this.exampleDatabase.dataChange.value.push(this.dataService.getDialogData());\n          setTimeout(() => {\n            this.refresh();\n          }, 1000);\n        }\n      });\n    }\n\n    startEdit(branchId, code, description, address, identification, createDate, currencyId) {\n      this.branchId = branchId;\n      const dialogRef = this.dialog.open(EditDialogComponent, {\n        data: {\n          branchId: branchId,\n          code: code,\n          description: description,\n          address: address,\n          identification: identification,\n          createDate: createDate,\n          currencyId: currencyId\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 1 && this.exampleDatabase) {\n          const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.branchId === this.branchId);\n          this.exampleDatabase.dataChange.value[foundIndex] = this.dataService.getDialogData();\n          setTimeout(() => {\n            this.refresh();\n          }, 1000);\n        }\n      });\n    }\n\n    deleteItem(branchId, code, description, address, identification, createDate, currencyId) {\n      this.branchId = branchId;\n      const dialogRef = this.dialog.open(DeleteDialogComponent, {\n        data: {\n          branchId: branchId,\n          code: code,\n          description: description,\n          address: address,\n          identification: identification,\n          createDate: createDate,\n          currencyId: currencyId\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 1 && this.exampleDatabase) {\n          const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.branchId === this.branchId);\n          this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n          setTimeout(() => {\n            this.refresh();\n          }, 1000);\n        }\n      });\n    }\n\n    loadData() {\n      this.exampleDatabase = new DataService(this.httpClient);\n      this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n      fromEvent(this.filter.nativeElement, \"keyup\") // .debounceTime(150)\n      // .distinctUntilChanged()\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.DataService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n        i0.ɵɵviewQuery(MatSort, 7);\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filter = _t.first);\n      }\n    },\n    decls: 39,\n    vars: 4,\n    consts: [[\"color\", \"primary\"], [1, \"spacer\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"container\", \"mat-elevation-z8\"], [\"matSort\", \"\", 1, \"mat-cell\", 3, \"dataSource\"], [\"table\", \"\"], [\"matColumnDef\", \"branchId\"], [4, \"matHeaderCellDef\"], [4, \"matCellDef\"], [\"matColumnDef\", \"Code\"], [\"matColumnDef\", \"Description\"], [\"matColumnDef\", \"Address\"], [\"matColumnDef\", \"Identification\"], [\"matColumnDef\", \"CreationDate\"], [\"matColumnDef\", \"Currency\"], [\"matColumnDef\", \"Actions\"], [4, \"matHeaderRowDef\"], [4, \"matRowDef\", \"matRowDefColumns\"], [3, \"length\"], [\"paginator\", \"\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"aria-label\", \"Example icon-button with a heart icon\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"aria-label\", \"Edit\"], [\"aria-label\", \"Delete\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0);\n        i0.ɵɵelementStart(1, \"span\");\n        i0.ɵɵtext(2, \"Branch CRUD\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"span\", 1);\n        i0.ɵɵtext(4, \" Reload data: \");\n        i0.ɵɵelementStart(5, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n          return ctx.refresh();\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7, \"refresh\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"mat-table\", 4, 5);\n        i0.ɵɵelementContainerStart(11, 6);\n        i0.ɵɵtemplate(12, AppComponent_mat_header_cell_12_Template, 2, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(13, AppComponent_mat_cell_13_Template, 2, 1, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(14, 9);\n        i0.ɵɵtemplate(15, AppComponent_mat_header_cell_15_Template, 2, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(16, AppComponent_mat_cell_16_Template, 2, 1, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(17, 10);\n        i0.ɵɵtemplate(18, AppComponent_mat_header_cell_18_Template, 2, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(19, AppComponent_mat_cell_19_Template, 2, 1, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(20, 11);\n        i0.ɵɵtemplate(21, AppComponent_mat_header_cell_21_Template, 2, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(22, AppComponent_mat_cell_22_Template, 2, 1, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(23, 12);\n        i0.ɵɵtemplate(24, AppComponent_mat_header_cell_24_Template, 2, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(25, AppComponent_mat_cell_25_Template, 2, 1, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(26, 13);\n        i0.ɵɵtemplate(27, AppComponent_mat_header_cell_27_Template, 2, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(28, AppComponent_mat_cell_28_Template, 3, 4, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(29, 14);\n        i0.ɵɵtemplate(30, AppComponent_mat_header_cell_30_Template, 2, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(31, AppComponent_mat_cell_31_Template, 2, 1, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(32, 15);\n        i0.ɵɵtemplate(33, AppComponent_mat_header_cell_33_Template, 4, 0, \"mat-header-cell\", 7);\n        i0.ɵɵtemplate(34, AppComponent_mat_cell_34_Template, 7, 0, \"mat-cell\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(35, AppComponent_mat_header_row_35_Template, 1, 0, \"mat-header-row\", 16);\n        i0.ɵɵtemplate(36, AppComponent_mat_row_36_Template, 1, 0, \"mat-row\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"mat-paginator\", 18, 19);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"length\", ctx.dataSource.filteredData.length);\n      }\n    },\n    directives: [i4.MatToolbar, i5.MatButton, i6.MatIcon, i7.MatTable, i8.MatSort, i7.MatColumnDef, i7.MatHeaderCellDef, i7.MatHeaderCell, i7.MatCellDef, i7.MatCell, i7.MatHeaderRowDef, i7.MatHeaderRow, i7.MatRowDef, i7.MatRow, i9.MatPaginator],\n    pipes: [i10.DatePipe],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.spacer[_ngcontent-%COMP%]{flex:1 1 auto}.form[_ngcontent-%COMP%]{min-height:56px;max-height:56px;display:flex;align-items:center;padding:8px 24px 0;font-size:20px;justify-content:space-between;border-bottom:1px solid transparent}.mat-form-field[_ngcontent-%COMP%]{font-size:14px;flex-grow:1;margin-top:8px}.no-results[_ngcontent-%COMP%]{display:flex;justify-content:center;padding:14px;font-size:14px;font-style:italic}.mat-cell[_ngcontent-%COMP%]:nth-child(1), .mat-header-cell[_ngcontent-%COMP%]:nth-child(1){flex:0 0 20%}.mat-cell[_ngcontent-%COMP%]:nth-child(2), .mat-header-cell[_ngcontent-%COMP%]:nth-child(2){flex:0 0 20%}.mat-cell[_ngcontent-%COMP%]:nth-child(3), .mat-header-cell[_ngcontent-%COMP%]:nth-child(3){flex:0 0 20%}.mat-cell[_ngcontent-%COMP%]:nth-child(7), .mat-header-cell[_ngcontent-%COMP%]:nth-child(7){flex:0 0 7%}\"]\n  });\n  return AppComponent;\n})();\nexport class ExampleDataSource extends DataSource {\n  constructor(_exampleDatabase, _paginator, _sort) {\n    super();\n    this._exampleDatabase = _exampleDatabase;\n    this._paginator = _paginator;\n    this._sort = _sort;\n    this._filterChange = new BehaviorSubject(\"\");\n    this.filteredData = [];\n    this.renderedData = []; // Reset to the first page when the user changes the filter.\n\n    this._filterChange.subscribe(() => this._paginator.pageIndex = 0);\n  }\n\n  get filter() {\n    return this._filterChange.value;\n  }\n\n  set filter(filter) {\n    this._filterChange.next(filter);\n  }\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n\n\n  connect() {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [this._exampleDatabase.dataChange, this._sort.sortChange, this._filterChange, this._paginator.page];\n\n    this._exampleDatabase.getAllBranchs();\n\n    return merge(...displayDataChanges, this._exampleDatabase.data);\n  }\n\n  disconnect() {}\n  /** Returns a sorted copy of the database data. */\n\n\n  sortData(data) {\n    if (!this._sort.active || this._sort.direction === \"\") {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let propertyA = \"\";\n      let propertyB = \"\";\n\n      switch (this._sort.active) {\n        case \"branchId\":\n          [propertyA, propertyB] = [a.branchId, b.branchId];\n          break;\n\n        case \"code\":\n          [propertyA, propertyB] = [a.code, b.code];\n          break;\n\n        case \"description\":\n          [propertyA, propertyB] = [a.description, b.description];\n          break;\n\n        case \"identification\":\n          [propertyA, propertyB] = [a.identification, b.identification];\n          break;\n\n        case \"currencyId\":\n          [propertyA, propertyB] = [a.currencyId, b.currencyId];\n          break;\n\n        case \"createDate\":\n          [propertyA, propertyB] = [a.createDate, b.createDate];\n          break;\n\n        case \"address\":\n          [propertyA, propertyB] = [a.address, b.address];\n          break;\n      }\n\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n      return (valueA < valueB ? -1 : 1) * (this._sort.direction === \"asc\" ? 1 : -1);\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}