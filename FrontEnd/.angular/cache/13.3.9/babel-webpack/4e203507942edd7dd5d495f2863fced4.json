{"ast":null,"code":"var _a, _b;\n\nimport { __decorate, __metadata, __param } from \"tslib\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { BranchesService } from 'src/app/services/branches.service';\nimport { Branch } from '../../models/branch';\nlet AddDialogComponent = class AddDialogComponent {\n  constructor(dialogRef, data, dataService) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.dataService = dataService;\n    this.formControl = new FormControl('', [Validators.required // Validators.email,\n    ]);\n  }\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : this.formControl.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  submit() {// empty stuff\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  confirmAdd() {\n    this.dataService.addBranch(this.data);\n  }\n\n};\nAddDialogComponent = __decorate([Component({\n  selector: 'app-add.dialog',\n  templateUrl: '../../dialogs/add/add.dialog.html',\n  styleUrls: ['../../dialogs/add/add.dialog.css']\n}), __param(1, Inject(MAT_DIALOG_DATA)), __metadata(\"design:paramtypes\", [MatDialogRef, typeof (_a = typeof Branch !== \"undefined\" && Branch) === \"function\" ? _a : Object, typeof (_b = typeof BranchesService !== \"undefined\" && BranchesService) === \"function\" ? _b : Object])], AddDialogComponent);\nexport { AddDialogComponent };","map":null,"metadata":{},"sourceType":"module"}